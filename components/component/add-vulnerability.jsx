"use client"
import React, { useState } from "react";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";

const AddVulnerability = () => {
  const initialFormData = {
    vulnerabilityName: "",
    description: "",
    impact: "",
    recommendation: "",
  };
  const [formData, setFormData] = useState(initialFormData);

  const [responseMessage, setResponseMessage] = useState("");

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const response = await fetch("/api/addVulnerability", {
        method: "POST",
        body: new URLSearchParams(formData), // Converts formData to URL-encoded string
      });

      const result = await response.json();

      if (response.ok) {
        setResponseMessage("Vulnerability created successfully!");
        setFormData(initialFormData); // Clear the form
      } else {
        setResponseMessage(`Error: ${result.error}`);
      }
    } catch (error) {
      console.error("Failed to submit form:", error);
      setResponseMessage("An unexpected error occurred.");
    }
  };

  return (
    <Dialog>
      <DialogTrigger asChild>
        <Button>New Vulnerability</Button>
      </DialogTrigger>
      <DialogContent className="max-w-full max-h-full sm:max-w-[625px] sm:max-h-[600px] overflow-y-auto">
        <DialogHeader>
          <DialogTitle>Create New Vulnerability</DialogTitle>
          <DialogDescription>
            <div>
              <form onSubmit={handleSubmit} className="grid grid-cols-1 md:grid-cols-1 gap-6 text-black py-4">
                <div className="space-y-2">
                  <Label htmlFor="vulnerabilityName">Vulnerability Name :</Label>
                  <Input
                    type="text"
                    id="vulnerabilityName"
                    name="vulnerabilityName"
                    value={formData.vulnerabilityName}
                    placeholder="Enter vulnerability Name..."
                    onChange={handleChange}
                    required
                  />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="description">Description :</Label>
                  <Textarea
                    id="description"
                    name="description"
                    value={formData.description}
                    onChange={handleChange}
                    placeholder="Enter description"
                    required
                  />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="impact">Impact :</Label>
                  <Textarea
                    id="impact"
                    name="impact"
                    value={formData.impact}
                    onChange={handleChange}
                    placeholder="Enter Impact....."
                    required
                  />
                </div>
                <div className="space-y-2">
                  <Label htmlFor="recommendation">Recommendation :</Label>
                  <Textarea
                    id="recommendation"
                    name="recommendation"
                    value={formData.recommendation}
                    onChange={handleChange}
                    required
                     placeholder="Enter Recommendation........."
                  />
                </div>
                <Button type="submit" >Submit</Button>
              
              </form>
              {responseMessage && <p>{responseMessage}</p>}
            </div>
          </DialogDescription>
        </DialogHeader>
       
      </DialogContent>
    </Dialog>
  );
};

export default AddVulnerability;
